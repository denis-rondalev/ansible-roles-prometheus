name: CI
on:
  workflow_dispatch:
    inputs:
      runKics:
        description: Run KICS scan
        type: boolean
        default: true
      runLint:
        description: Run Ansible Lint
        type: boolean
        default: true
      runMolecule:
        description: Run Ansible Molecule
        type: boolean
        default: true
  push:
    paths-ignore:
      - README.md
    branches: ["master", "main"]
  pull_request:
    branches: ["master", "main"]
  schedule:
    - cron: "0 1 * * 0"

env:
  ACTIONS_REPOSITORY: "gha-templates"
  ROLES_PATH: "roles/"

jobs:
  init:
    name: Initialize CI for ${{ github.ref_name }}
    runs-on: ubuntu-latest
    timeout-minutes: 1
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GHA_TOKEN }}

      - name: Get roles list in json
        id: roles-list
        run: echo "roles-list=$(ls ${{ env.ROLES_PATH }} | jq -R -s -c 'split("\n")[:-1]')" >> $GITHUB_OUTPUT
        shell: bash

    outputs:
      roles-list: ${{ steps.roles-list.outputs.roles-list }}

  scan:
    name: Checkmarx KICS
    runs-on: ubuntu-latest
    timeout-minutes: 5
    needs: [init]
    if: |
      inputs.runKics == true || 
      github.event_name == 'push' || 
      github.event_name == 'pull_request' || 
      github.event_name == 'schedule'
    permissions:
      contents: read # for actions/checkout to fetch code
      issues: write # for checkmarx/kics-github-action to write feedback to github issues
      pull-requests: write # for checkmarx/kics-github-action to write feedback to PR
      security-events: write # for github/codeql-action/upload-sarif to upload report for CodeQL/Security Alerts
      actions: read # only required for a private repository by github/codeql-action/upload-sarif to get the Action run status
    strategy:
      matrix:
        roles: ${{ fromJson(needs.init.outputs.roles-list) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Checkout actions repository
        uses: actions/checkout@v3
        with:
          repository: ${{ github.repository_owner }}/${{ env.ACTIONS_REPOSITORY }}
          token: ${{ secrets.GHA_TOKEN }}
          path: gha_templates
          fetch-depth: 0

      - name: Run KICS scan
        uses: ./gha_templates/checkmarx-kics
        with:
          path: "roles/${{ matrix.roles }}"

  lint:
    name: Ansible Lint
    runs-on: ubuntu-latest
    timeout-minutes: 5
    needs: [init]
    if: |
      inputs.runLint == true ||
      github.event_name == 'push' ||
      github.event_name == 'pull_request' ||
      github.event_name == 'schedule'
    strategy:
      matrix:
        roles: ${{ fromJson(needs.init.outputs.roles-list) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Checkout actions repository
        uses: actions/checkout@v3
        with:
          repository: ${{ github.repository_owner }}/${{ env.ACTIONS_REPOSITORY }}
          token: ${{ secrets.GHA_TOKEN }}
          path: gha_templates
          fetch-depth: 0

      - name: Run Ansible Lint
        uses: ./gha_templates/ansible-lint
        with:
          path: "roles/${{ matrix.roles }}"

  molecule:
    name: Ansible Molecule
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: [init]
    if: |
      inputs.runMolecule == true ||
      github.event_name == 'push' ||
      github.event_name == 'pull_request' ||
      github.event_name == 'schedule'
    strategy:
      matrix:
        roles: ${{ fromJson(needs.init.outputs.roles-list) }}
        distro:
          - debian12

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Checkout actions repository
        uses: actions/checkout@v3
        with:
          repository: ${{ github.repository_owner }}/${{ env.ACTIONS_REPOSITORY }}
          token: ${{ secrets.GHA_TOKEN }}
          path: gha_templates
          fetch-depth: 0

      - name: Run Ansible Molecule
        uses: ./gha_templates/ansible-molecule
        with:
          github_token: ${{ secrets.GHA_TOKEN }}
          role_name: ${{ github.event.repository.name }}
          distro: ${{ matrix.distro }}
          working_directory: "roles/${{ matrix.roles }}"
